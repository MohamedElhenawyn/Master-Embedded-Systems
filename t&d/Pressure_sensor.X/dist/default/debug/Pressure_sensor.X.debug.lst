

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Nov 28 14:21:24 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239                           
   240                           	psect	strings
   241  02C2                     __pstrings:
   242  02C2                     stringtab:
   243  02C2                     __stringtab:
   244  02C2                     stringcode:	
   245                           ;	String table - string pointers are 1 byte each
   246                           
   247  02C2                     stringdir:
   248  02C2  3002               	movlw	high stringdir
   249  02C3  008A               	movwf	10
   250  02C4  0804               	movf	4,w
   251  02C5  0A84               	incf	4,f
   252  02C6  0782               	addwf	2,f
   253  02C7                     __stringbase:
   254  02C7  3400               	retlw	0
   255  02C8                     __end_of__stringtab:
   256  02C8                     _dpowers:
   257  02C8  3401               	retlw	1
   258  02C9  3400               	retlw	0
   259  02CA  340A               	retlw	10
   260  02CB  3400               	retlw	0
   261  02CC  3464               	retlw	100
   262  02CD  3400               	retlw	0
   263  02CE  34E8               	retlw	232
   264  02CF  3403               	retlw	3
   265  02D0  3410               	retlw	16
   266  02D1  3427               	retlw	39
   267  02D2                     __end_of_dpowers:
   268  02D2                     STR_1:
   269  02D2  3470               	retlw	112	;'p'
   270  02D3  3472               	retlw	114	;'r'
   271  02D4  3465               	retlw	101	;'e'
   272  02D5  346C               	retlw	108	;'l'
   273  02D6  346F               	retlw	111	;'o'
   274  02D7  3461               	retlw	97	;'a'
   275  02D8  3464               	retlw	100	;'d'
   276  02D9  3456               	retlw	86	;'V'
   277  02DA  3461               	retlw	97	;'a'
   278  02DB  346C               	retlw	108	;'l'
   279  02DC  3475               	retlw	117	;'u'
   280  02DD  3465               	retlw	101	;'e'
   281  02DE  3420               	retlw	32	;' '
   282  02DF  3425               	retlw	37	;'%'
   283  02E0  3464               	retlw	100	;'d'
   284  02E1  3400               	retlw	0
   285                           
   286                           	psect	nvBANK0
   287  003E                     __pnvBANK0:
   288  003E                     _preloadValue:
   289  003E                     	ds	4
   290  000E                     _TMR1	set	14
   291  005F                     _GIE	set	95
   292  005E                     _PEIE	set	94
   293  0080                     _TMR1ON	set	128
   294  0085                     _T1CKPS1	set	133
   295  0084                     _T1CKPS0	set	132
   296  0081                     _TMR1CS	set	129
   297  0060                     _TMR1IF	set	96
   298  0030                     _RB0	set	48
   299  0460                     _TMR1IE	set	1120
   300  0430                     _TRISB0	set	1072
   301                           
   302                           	psect	cinit
   303  000F                     start_initialization:	
   304                           ; #config settings
   305                           
   306  000F                     __initialization:
   307                           
   308                           ; Clear objects allocated to COMMON
   309  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   310  0010                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  0010                     __end_of__initialization:
   314  0010  0183               	clrf	3
   315  0011  120A  118A  2AE2   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	bssCOMMON
   318  007A                     __pbssCOMMON:
   319  007A                     _C:
   320  007A                     	ds	1
   321                           
   322                           	psect	cstackCOMMON
   323  0070                     __pcstackCOMMON:
   324  0070                     ?_sEos_Init_Timer1:
   325  0070                     ?_putch:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_main:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_ISR:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_ISR:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     putch@c:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           ; 1 bytes @ 0x0
   342  0070                     	ds	3
   343  0073                     ??_putch:
   344  0073                     ??___lmul:	
   345                           ; 1 bytes @ 0x3
   346                           
   347  0073                     ?___lwdiv:	
   348                           ; 1 bytes @ 0x3
   349                           
   350  0073                     ___lwdiv@divisor:	
   351                           ; 2 bytes @ 0x3
   352                           
   353                           
   354                           ; 2 bytes @ 0x3
   355  0073                     	ds	1
   356  0074                     ___lmul@product:
   357                           
   358                           ; 4 bytes @ 0x4
   359  0074                     	ds	1
   360  0075                     ___lwdiv@dividend:
   361                           
   362                           ; 2 bytes @ 0x5
   363  0075                     	ds	2
   364  0077                     ??___lwdiv:
   365                           
   366                           ; 1 bytes @ 0x7
   367  0077                     	ds	1
   368  0078                     ??___aldiv:
   369  0078                     ??___lwmod:	
   370                           ; 1 bytes @ 0x8
   371                           
   372                           
   373                           ; 1 bytes @ 0x8
   374  0078                     	ds	1
   375  0079                     sEos_Init_Timer1@TICK_MS:
   376  0079                     ___lwmod@counter:	
   377                           ; 1 bytes @ 0x9
   378                           
   379                           
   380                           ; 1 bytes @ 0x9
   381  0079                     	ds	1
   382  007A                     ??_main:
   383                           
   384                           	psect	cstackBANK0
   385  0020                     __pcstackBANK0:	
   386                           ; 1 bytes @ 0xA
   387                           
   388  0020                     ?___lmul:
   389  0020                     ___lwdiv@counter:	
   390                           ; 4 bytes @ 0x0
   391                           
   392  0020                     ___lmul@multiplier:	
   393                           ; 1 bytes @ 0x0
   394                           
   395                           
   396                           ; 4 bytes @ 0x0
   397  0020                     	ds	1
   398  0021                     ___lwdiv@quotient:
   399                           
   400                           ; 2 bytes @ 0x1
   401  0021                     	ds	2
   402  0023                     ?___lwmod:
   403  0023                     ___lwmod@divisor:	
   404                           ; 2 bytes @ 0x3
   405                           
   406                           
   407                           ; 2 bytes @ 0x3
   408  0023                     	ds	1
   409  0024                     ___lmul@multiplicand:
   410                           
   411                           ; 4 bytes @ 0x4
   412  0024                     	ds	1
   413  0025                     ___lwmod@dividend:
   414                           
   415                           ; 2 bytes @ 0x5
   416  0025                     	ds	2
   417  0027                     ?_printf:
   418                           
   419                           ; 2 bytes @ 0x7
   420  0027                     	ds	1
   421  0028                     ?___aldiv:
   422  0028                     ___aldiv@divisor:	
   423                           ; 4 bytes @ 0x8
   424                           
   425                           
   426                           ; 4 bytes @ 0x8
   427  0028                     	ds	3
   428  002B                     ??_printf:
   429                           
   430                           ; 1 bytes @ 0xB
   431  002B                     	ds	1
   432  002C                     ___aldiv@dividend:
   433                           
   434                           ; 4 bytes @ 0xC
   435  002C                     	ds	2
   436  002E                     printf@ap:
   437                           
   438                           ; 1 bytes @ 0xE
   439  002E                     	ds	1
   440  002F                     printf@flag:
   441                           
   442                           ; 1 bytes @ 0xF
   443  002F                     	ds	1
   444  0030                     printf@f:
   445  0030                     ___aldiv@counter:	
   446                           ; 1 bytes @ 0x10
   447                           
   448                           
   449                           ; 1 bytes @ 0x10
   450  0030                     	ds	1
   451  0031                     printf@prec:
   452  0031                     ___aldiv@sign:	
   453                           ; 1 bytes @ 0x11
   454                           
   455                           
   456                           ; 1 bytes @ 0x11
   457  0031                     	ds	1
   458  0032                     printf@val:
   459  0032                     ___aldiv@quotient:	
   460                           ; 2 bytes @ 0x12
   461                           
   462                           
   463                           ; 4 bytes @ 0x12
   464  0032                     	ds	2
   465  0034                     printf@c:
   466                           
   467                           ; 1 bytes @ 0x14
   468  0034                     	ds	2
   469  0036                     ??_sEos_Init_Timer1:
   470                           
   471                           ; 1 bytes @ 0x16
   472  0036                     	ds	8
   473                           
   474                           	psect	maintext
   475  02E2                     __pmaintext:	
   476 ;;
   477 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   478 ;;
   479 ;; *************** function _main *****************
   480 ;; Defined at:
   481 ;;		line 17 in file "main.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : B00/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0
   498 ;;      Totals:         0       0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels required when called: 3
   501 ;; This function calls:
   502 ;;		_printf
   503 ;;		_sEos_Init_Timer1
   504 ;; This function is called by:
   505 ;;		Startup code after reset
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509  02E2                     _main:	
   510                           ;psect for function _main
   511                           
   512  02E2                     l1265:	
   513                           ;incstack = 0
   514                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   515                           
   516                           
   517                           ;main.c: 18:     TRISB0 = 0;
   518  02E2  1683               	bsf	3,5	;RP0=1, select bank1
   519  02E3  1303               	bcf	3,6	;RP1=0, select bank1
   520  02E4  1006               	bcf	6,0	;volatile
   521                           
   522                           ;main.c: 19:     RB0 = 0;
   523  02E5  1283               	bcf	3,5	;RP0=0, select bank0
   524  02E6  1303               	bcf	3,6	;RP1=0, select bank0
   525  02E7  1006               	bcf	6,0	;volatile
   526  02E8                     l1267:
   527                           
   528                           ;main.c: 20:     sEos_Init_Timer1(20);
   529  02E8  3014               	movlw	20
   530  02E9  120A  118A  218E  120A  118A  	fcall	_sEos_Init_Timer1
   531  02EE                     l1269:
   532                           
   533                           ;main.c: 22:     {;main.c: 23:         printf("preloadValue %d",preloadValue);
   534  02EE  1283               	bcf	3,5	;RP0=0, select bank0
   535  02EF  1303               	bcf	3,6	;RP1=0, select bank0
   536  02F0  0841               	movf	_preloadValue+3,w
   537  02F1  00AA               	movwf	?_printf+3
   538  02F2  0840               	movf	_preloadValue+2,w
   539  02F3  00A9               	movwf	?_printf+2
   540  02F4  083F               	movf	_preloadValue+1,w
   541  02F5  00A8               	movwf	?_printf+1
   542  02F6  083E               	movf	_preloadValue,w
   543  02F7  00A7               	movwf	?_printf
   544  02F8  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   545  02F9  120A  118A  2014  120A  118A  	fcall	_printf
   546  02FE  2AEE               	goto	l1269
   547  02FF  120A  118A  280C   	ljmp	start
   548  0302                     __end_of_main:
   549                           
   550                           	psect	text1
   551  018E                     __ptext1:	
   552 ;; *************** function _sEos_Init_Timer1 *****************
   553 ;; Defined at:
   554 ;;		line 6 in file "sEos.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  TICK_MS         1    wreg     const unsigned char 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  TICK_MS         1    9[COMMON] const unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         1       0       0       0       0
   570 ;;      Temps:          0       8       0       0       0
   571 ;;      Totals:         1       8       0       0       0
   572 ;;Total ram usage:        9 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 2
   575 ;; This function calls:
   576 ;;		___aldiv
   577 ;;		___lmul
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583  018E                     _sEos_Init_Timer1:	
   584                           ;psect for function _sEos_Init_Timer1
   585                           
   586                           
   587                           ;incstack = 0
   588                           ; Regs used in _sEos_Init_Timer1: [wreg+status,2+status,0+pclath+cstack]
   589                           ;sEos_Init_Timer1@TICK_MS stored from wreg
   590  018E  00F9               	movwf	sEos_Init_Timer1@TICK_MS
   591  018F                     l1191:
   592                           
   593                           ;sEos.c: 6: void sEos_Init_Timer1(const tByte TICK_MS);sEos.c: 7: {;sEos.c: 13:     prel
      +                          oadValue = (5242880-(TICK_MS * 4000000)) / 80;
   594  018F  3000               	movlw	0
   595  0190  1283               	bcf	3,5	;RP0=0, select bank0
   596  0191  1303               	bcf	3,6	;RP1=0, select bank0
   597  0192  00AB               	movwf	___aldiv@divisor+3
   598  0193  3000               	movlw	0
   599  0194  00AA               	movwf	___aldiv@divisor+2
   600  0195  3000               	movlw	0
   601  0196  00A9               	movwf	___aldiv@divisor+1
   602  0197  3050               	movlw	80
   603  0198  00A8               	movwf	___aldiv@divisor
   604  0199  3000               	movlw	0
   605  019A  00B6               	movwf	??_sEos_Init_Timer1
   606  019B  3000               	movlw	0
   607  019C  00B7               	movwf	??_sEos_Init_Timer1+1
   608  019D  3050               	movlw	80
   609  019E  00B8               	movwf	??_sEos_Init_Timer1+2
   610  019F  3000               	movlw	0
   611  01A0  00B9               	movwf	??_sEos_Init_Timer1+3
   612  01A1  0879               	movf	sEos_Init_Timer1@TICK_MS,w
   613  01A2  00BA               	movwf	??_sEos_Init_Timer1+4
   614  01A3  01BB               	clrf	??_sEos_Init_Timer1+5
   615  01A4  01BC               	clrf	??_sEos_Init_Timer1+6
   616  01A5  01BD               	clrf	??_sEos_Init_Timer1+7
   617  01A6  083D               	movf	??_sEos_Init_Timer1+7,w
   618  01A7  00A3               	movwf	___lmul@multiplier+3
   619  01A8  083C               	movf	??_sEos_Init_Timer1+6,w
   620  01A9  00A2               	movwf	___lmul@multiplier+2
   621  01AA  083B               	movf	??_sEos_Init_Timer1+5,w
   622  01AB  00A1               	movwf	___lmul@multiplier+1
   623  01AC  083A               	movf	??_sEos_Init_Timer1+4,w
   624  01AD  00A0               	movwf	___lmul@multiplier
   625  01AE  30FF               	movlw	255
   626  01AF  00A7               	movwf	___lmul@multiplicand+3
   627  01B0  30C2               	movlw	194
   628  01B1  00A6               	movwf	___lmul@multiplicand+2
   629  01B2  30F7               	movlw	247
   630  01B3  00A5               	movwf	___lmul@multiplicand+1
   631  01B4  3000               	movlw	0
   632  01B5  00A4               	movwf	___lmul@multiplicand
   633  01B6  120A  118A  21F8  120A  118A  	fcall	___lmul
   634  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   635  01BC  1303               	bcf	3,6	;RP1=0, select bank0
   636  01BD  0820               	movf	?___lmul,w
   637  01BE  07B6               	addwf	??_sEos_Init_Timer1,f
   638  01BF  0821               	movf	?___lmul+1,w
   639  01C0  1803               	skipnc
   640  01C1  0F21               	incfsz	?___lmul+1,w
   641  01C2  29C4               	goto	u1050
   642  01C3  29C5               	goto	u1051
   643  01C4                     u1050:
   644  01C4  07B7               	addwf	??_sEos_Init_Timer1+1,f
   645  01C5                     u1051:
   646  01C5  0822               	movf	?___lmul+2,w
   647  01C6  1803               	skipnc
   648  01C7  0F22               	incfsz	?___lmul+2,w
   649  01C8  29CA               	goto	u1052
   650  01C9  29CB               	goto	u1053
   651  01CA                     u1052:
   652  01CA  07B8               	addwf	??_sEos_Init_Timer1+2,f
   653  01CB                     u1053:
   654  01CB  0823               	movf	?___lmul+3,w
   655  01CC  1803               	skipnc
   656  01CD  0A23               	incf	?___lmul+3,w
   657  01CE  07B9               	addwf	??_sEos_Init_Timer1+3,f
   658  01CF  0839               	movf	??_sEos_Init_Timer1+3,w
   659  01D0  00AF               	movwf	___aldiv@dividend+3
   660  01D1  0838               	movf	??_sEos_Init_Timer1+2,w
   661  01D2  00AE               	movwf	___aldiv@dividend+2
   662  01D3  0837               	movf	??_sEos_Init_Timer1+1,w
   663  01D4  00AD               	movwf	___aldiv@dividend+1
   664  01D5  0836               	movf	??_sEos_Init_Timer1,w
   665  01D6  00AC               	movwf	___aldiv@dividend
   666  01D7  120A  118A  20F1  120A  118A  	fcall	___aldiv
   667  01DC  1283               	bcf	3,5	;RP0=0, select bank0
   668  01DD  1303               	bcf	3,6	;RP1=0, select bank0
   669  01DE  082B               	movf	?___aldiv+3,w
   670  01DF  00C1               	movwf	_preloadValue+3
   671  01E0  082A               	movf	?___aldiv+2,w
   672  01E1  00C0               	movwf	_preloadValue+2
   673  01E2  0829               	movf	?___aldiv+1,w
   674  01E3  00BF               	movwf	_preloadValue+1
   675  01E4  0828               	movf	?___aldiv,w
   676  01E5  00BE               	movwf	_preloadValue
   677  01E6                     l1193:
   678                           
   679                           ;sEos.c: 15:     TMR1 = (unsigned short) preloadValue;
   680  01E6  083F               	movf	_preloadValue+1,w
   681  01E7  008F               	movwf	15	;volatile
   682  01E8  083E               	movf	_preloadValue,w
   683  01E9  008E               	movwf	14	;volatile
   684  01EA                     l1195:
   685                           
   686                           ;sEos.c: 17:     TMR1CS = 0;
   687  01EA  1090               	bcf	16,1	;volatile
   688  01EB                     l1197:
   689                           
   690                           ;sEos.c: 19:     T1CKPS0 = 0;
   691  01EB  1210               	bcf	16,4	;volatile
   692  01EC                     l1199:
   693                           
   694                           ;sEos.c: 20:     T1CKPS1 = 0;
   695  01EC  1290               	bcf	16,5	;volatile
   696  01ED                     l1201:
   697                           
   698                           ;sEos.c: 22:     RB0 = 1;
   699  01ED  1406               	bsf	6,0	;volatile
   700  01EE                     l1203:
   701                           
   702                           ;sEos.c: 24:     TMR1ON = 1;
   703  01EE  1410               	bsf	16,0	;volatile
   704  01EF                     l1205:
   705                           
   706                           ;sEos.c: 27:     TMR1IE = 1;
   707  01EF  1683               	bsf	3,5	;RP0=1, select bank1
   708  01F0  1303               	bcf	3,6	;RP1=0, select bank1
   709  01F1  140C               	bsf	12,0	;volatile
   710  01F2                     l1207:
   711                           
   712                           ;sEos.c: 28:     TMR1IF = 0;
   713  01F2  1283               	bcf	3,5	;RP0=0, select bank0
   714  01F3  1303               	bcf	3,6	;RP1=0, select bank0
   715  01F4  100C               	bcf	12,0	;volatile
   716  01F5                     l1209:
   717                           
   718                           ;sEos.c: 29:     PEIE = 1;
   719  01F5  170B               	bsf	11,6	;volatile
   720  01F6                     l1211:
   721                           
   722                           ;sEos.c: 30:     GIE = 1;
   723  01F6  178B               	bsf	11,7	;volatile
   724  01F7                     l56:
   725  01F7  0008               	return
   726  01F8                     __end_of_sEos_Init_Timer1:
   727                           
   728                           	psect	text2
   729  01F8                     __ptext2:	
   730 ;; *************** function ___lmul *****************
   731 ;; Defined at:
   732 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  multiplier      4    0[BANK0 ] unsigned long 
   735 ;;  multiplicand    4    4[BANK0 ] unsigned long 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  product         4    4[COMMON] unsigned long 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  4    0[BANK0 ] unsigned long 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       8       0       0       0
   748 ;;      Locals:         4       0       0       0       0
   749 ;;      Temps:          1       0       0       0       0
   750 ;;      Totals:         5       8       0       0       0
   751 ;;Total ram usage:       13 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; Hardware stack levels required when called: 1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_sEos_Init_Timer1
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761  01F8                     ___lmul:	
   762                           ;psect for function ___lmul
   763                           
   764  01F8                     l1089:	
   765                           ;incstack = 0
   766                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   767                           
   768  01F8  3000               	movlw	0
   769  01F9  00F7               	movwf	___lmul@product+3
   770  01FA  3000               	movlw	0
   771  01FB  00F6               	movwf	___lmul@product+2
   772  01FC  3000               	movlw	0
   773  01FD  00F5               	movwf	___lmul@product+1
   774  01FE  3000               	movlw	0
   775  01FF  00F4               	movwf	___lmul@product
   776  0200                     l1091:
   777  0200  1283               	bcf	3,5	;RP0=0, select bank0
   778  0201  1303               	bcf	3,6	;RP1=0, select bank0
   779  0202  1C20               	btfss	___lmul@multiplier,0
   780  0203  2A05               	goto	u771
   781  0204  2A06               	goto	u770
   782  0205                     u771:
   783  0205  2A1D               	goto	l1095
   784  0206                     u770:
   785  0206                     l1093:
   786  0206  0824               	movf	___lmul@multiplicand,w
   787  0207  07F4               	addwf	___lmul@product,f
   788  0208  0825               	movf	___lmul@multiplicand+1,w
   789  0209  1103               	clrz
   790  020A  1803               	skipnc
   791  020B  3E01               	addlw	1
   792  020C  1903               	skipnz
   793  020D  2A0F               	goto	u781
   794  020E  07F5               	addwf	___lmul@product+1,f
   795  020F                     u781:
   796  020F  0826               	movf	___lmul@multiplicand+2,w
   797  0210  1103               	clrz
   798  0211  1803               	skipnc
   799  0212  3E01               	addlw	1
   800  0213  1903               	skipnz
   801  0214  2A16               	goto	u782
   802  0215  07F6               	addwf	___lmul@product+2,f
   803  0216                     u782:
   804  0216  0827               	movf	___lmul@multiplicand+3,w
   805  0217  1103               	clrz
   806  0218  1803               	skipnc
   807  0219  3E01               	addlw	1
   808  021A  1903               	skipnz
   809  021B  2A1D               	goto	u783
   810  021C  07F7               	addwf	___lmul@product+3,f
   811  021D                     u783:
   812  021D                     l1095:
   813  021D  3001               	movlw	1
   814  021E  00F3               	movwf	??___lmul
   815  021F                     u795:
   816  021F  1003               	clrc
   817  0220  0DA4               	rlf	___lmul@multiplicand,f
   818  0221  0DA5               	rlf	___lmul@multiplicand+1,f
   819  0222  0DA6               	rlf	___lmul@multiplicand+2,f
   820  0223  0DA7               	rlf	___lmul@multiplicand+3,f
   821  0224  0BF3               	decfsz	??___lmul,f
   822  0225  2A1F               	goto	u795
   823  0226                     l1097:
   824  0226  3001               	movlw	1
   825  0227                     u805:
   826  0227  1003               	clrc
   827  0228  0CA3               	rrf	___lmul@multiplier+3,f
   828  0229  0CA2               	rrf	___lmul@multiplier+2,f
   829  022A  0CA1               	rrf	___lmul@multiplier+1,f
   830  022B  0CA0               	rrf	___lmul@multiplier,f
   831  022C  3EFF               	addlw	-1
   832  022D  1D03               	skipz
   833  022E  2A27               	goto	u805
   834  022F  0823               	movf	___lmul@multiplier+3,w
   835  0230  0422               	iorwf	___lmul@multiplier+2,w
   836  0231  0421               	iorwf	___lmul@multiplier+1,w
   837  0232  0420               	iorwf	___lmul@multiplier,w
   838  0233  1D03               	skipz
   839  0234  2A36               	goto	u811
   840  0235  2A37               	goto	u810
   841  0236                     u811:
   842  0236  2A00               	goto	l1091
   843  0237                     u810:
   844  0237                     l1099:
   845  0237  0877               	movf	___lmul@product+3,w
   846  0238  00A3               	movwf	?___lmul+3
   847  0239  0876               	movf	___lmul@product+2,w
   848  023A  00A2               	movwf	?___lmul+2
   849  023B  0875               	movf	___lmul@product+1,w
   850  023C  00A1               	movwf	?___lmul+1
   851  023D  0874               	movf	___lmul@product,w
   852  023E  00A0               	movwf	?___lmul
   853  023F                     l186:
   854  023F  0008               	return
   855  0240                     __end_of___lmul:
   856                           
   857                           	psect	text3
   858  00F1                     __ptext3:	
   859 ;; *************** function ___aldiv *****************
   860 ;; Defined at:
   861 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\aldiv.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  divisor         4    8[BANK0 ] long 
   864 ;;  dividend        4   12[BANK0 ] long 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  quotient        4   18[BANK0 ] long 
   867 ;;  sign            1   17[BANK0 ] unsigned char 
   868 ;;  counter         1   16[BANK0 ] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  4    8[BANK0 ] long 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       8       0       0       0
   879 ;;      Locals:         0       6       0       0       0
   880 ;;      Temps:          1       0       0       0       0
   881 ;;      Totals:         1      14       0       0       0
   882 ;;Total ram usage:       15 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; Hardware stack levels required when called: 1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_sEos_Init_Timer1
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892  00F1                     ___aldiv:	
   893                           ;psect for function ___aldiv
   894                           
   895  00F1                     l1103:	
   896                           ;incstack = 0
   897                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   898                           
   899  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   900  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   901  00F3  01B1               	clrf	___aldiv@sign
   902  00F4                     l1105:
   903  00F4  1FAB               	btfss	___aldiv@divisor+3,7
   904  00F5  28F7               	goto	u821
   905  00F6  28F8               	goto	u820
   906  00F7                     u821:
   907  00F7  2905               	goto	l237
   908  00F8                     u820:
   909  00F8                     l1107:
   910  00F8  09A8               	comf	___aldiv@divisor,f
   911  00F9  09A9               	comf	___aldiv@divisor+1,f
   912  00FA  09AA               	comf	___aldiv@divisor+2,f
   913  00FB  09AB               	comf	___aldiv@divisor+3,f
   914  00FC  0AA8               	incf	___aldiv@divisor,f
   915  00FD  1903               	skipnz
   916  00FE  0AA9               	incf	___aldiv@divisor+1,f
   917  00FF  1903               	skipnz
   918  0100  0AAA               	incf	___aldiv@divisor+2,f
   919  0101  1903               	skipnz
   920  0102  0AAB               	incf	___aldiv@divisor+3,f
   921  0103  01B1               	clrf	___aldiv@sign
   922  0104  0AB1               	incf	___aldiv@sign,f
   923  0105                     l237:
   924  0105  1FAF               	btfss	___aldiv@dividend+3,7
   925  0106  2908               	goto	u831
   926  0107  2909               	goto	u830
   927  0108                     u831:
   928  0108  2918               	goto	l1113
   929  0109                     u830:
   930  0109                     l1109:
   931  0109  09AC               	comf	___aldiv@dividend,f
   932  010A  09AD               	comf	___aldiv@dividend+1,f
   933  010B  09AE               	comf	___aldiv@dividend+2,f
   934  010C  09AF               	comf	___aldiv@dividend+3,f
   935  010D  0AAC               	incf	___aldiv@dividend,f
   936  010E  1903               	skipnz
   937  010F  0AAD               	incf	___aldiv@dividend+1,f
   938  0110  1903               	skipnz
   939  0111  0AAE               	incf	___aldiv@dividend+2,f
   940  0112  1903               	skipnz
   941  0113  0AAF               	incf	___aldiv@dividend+3,f
   942  0114                     l1111:
   943  0114  3001               	movlw	1
   944  0115  00F8               	movwf	??___aldiv
   945  0116  0878               	movf	??___aldiv,w
   946  0117  06B1               	xorwf	___aldiv@sign,f
   947  0118                     l1113:
   948  0118  3000               	movlw	0
   949  0119  00B5               	movwf	___aldiv@quotient+3
   950  011A  3000               	movlw	0
   951  011B  00B4               	movwf	___aldiv@quotient+2
   952  011C  3000               	movlw	0
   953  011D  00B3               	movwf	___aldiv@quotient+1
   954  011E  3000               	movlw	0
   955  011F  00B2               	movwf	___aldiv@quotient
   956  0120                     l1115:
   957  0120  082B               	movf	___aldiv@divisor+3,w
   958  0121  042A               	iorwf	___aldiv@divisor+2,w
   959  0122  0429               	iorwf	___aldiv@divisor+1,w
   960  0123  0428               	iorwf	___aldiv@divisor,w
   961  0124  1903               	skipnz
   962  0125  2927               	goto	u841
   963  0126  2928               	goto	u840
   964  0127                     u841:
   965  0127  2975               	goto	l1135
   966  0128                     u840:
   967  0128                     l1117:
   968  0128  01B0               	clrf	___aldiv@counter
   969  0129  0AB0               	incf	___aldiv@counter,f
   970  012A  2938               	goto	l1121
   971  012B                     l1119:
   972  012B  3001               	movlw	1
   973  012C  00F8               	movwf	??___aldiv
   974  012D                     u855:
   975  012D  1003               	clrc
   976  012E  0DA8               	rlf	___aldiv@divisor,f
   977  012F  0DA9               	rlf	___aldiv@divisor+1,f
   978  0130  0DAA               	rlf	___aldiv@divisor+2,f
   979  0131  0DAB               	rlf	___aldiv@divisor+3,f
   980  0132  0BF8               	decfsz	??___aldiv,f
   981  0133  292D               	goto	u855
   982  0134  3001               	movlw	1
   983  0135  00F8               	movwf	??___aldiv
   984  0136  0878               	movf	??___aldiv,w
   985  0137  07B0               	addwf	___aldiv@counter,f
   986  0138                     l1121:
   987  0138  1FAB               	btfss	___aldiv@divisor+3,7
   988  0139  293B               	goto	u861
   989  013A  293C               	goto	u860
   990  013B                     u861:
   991  013B  292B               	goto	l1119
   992  013C                     u860:
   993  013C                     l1123:
   994  013C  3001               	movlw	1
   995  013D  00F8               	movwf	??___aldiv
   996  013E                     u875:
   997  013E  1003               	clrc
   998  013F  0DB2               	rlf	___aldiv@quotient,f
   999  0140  0DB3               	rlf	___aldiv@quotient+1,f
  1000  0141  0DB4               	rlf	___aldiv@quotient+2,f
  1001  0142  0DB5               	rlf	___aldiv@quotient+3,f
  1002  0143  0BF8               	decfsz	??___aldiv,f
  1003  0144  293E               	goto	u875
  1004  0145                     l1125:
  1005  0145  082B               	movf	___aldiv@divisor+3,w
  1006  0146  022F               	subwf	___aldiv@dividend+3,w
  1007  0147  1D03               	skipz
  1008  0148  2953               	goto	u885
  1009  0149  082A               	movf	___aldiv@divisor+2,w
  1010  014A  022E               	subwf	___aldiv@dividend+2,w
  1011  014B  1D03               	skipz
  1012  014C  2953               	goto	u885
  1013  014D  0829               	movf	___aldiv@divisor+1,w
  1014  014E  022D               	subwf	___aldiv@dividend+1,w
  1015  014F  1D03               	skipz
  1016  0150  2953               	goto	u885
  1017  0151  0828               	movf	___aldiv@divisor,w
  1018  0152  022C               	subwf	___aldiv@dividend,w
  1019  0153                     u885:
  1020  0153  1C03               	skipc
  1021  0154  2956               	goto	u881
  1022  0155  2957               	goto	u880
  1023  0156                     u881:
  1024  0156  2966               	goto	l1131
  1025  0157                     u880:
  1026  0157                     l1127:
  1027  0157  0828               	movf	___aldiv@divisor,w
  1028  0158  02AC               	subwf	___aldiv@dividend,f
  1029  0159  0829               	movf	___aldiv@divisor+1,w
  1030  015A  1C03               	skipc
  1031  015B  0F29               	incfsz	___aldiv@divisor+1,w
  1032  015C  02AD               	subwf	___aldiv@dividend+1,f
  1033  015D  082A               	movf	___aldiv@divisor+2,w
  1034  015E  1C03               	skipc
  1035  015F  0F2A               	incfsz	___aldiv@divisor+2,w
  1036  0160  02AE               	subwf	___aldiv@dividend+2,f
  1037  0161  082B               	movf	___aldiv@divisor+3,w
  1038  0162  1C03               	skipc
  1039  0163  0F2B               	incfsz	___aldiv@divisor+3,w
  1040  0164  02AF               	subwf	___aldiv@dividend+3,f
  1041  0165                     l1129:
  1042  0165  1432               	bsf	___aldiv@quotient,0
  1043  0166                     l1131:
  1044  0166  3001               	movlw	1
  1045  0167                     u895:
  1046  0167  1003               	clrc
  1047  0168  0CAB               	rrf	___aldiv@divisor+3,f
  1048  0169  0CAA               	rrf	___aldiv@divisor+2,f
  1049  016A  0CA9               	rrf	___aldiv@divisor+1,f
  1050  016B  0CA8               	rrf	___aldiv@divisor,f
  1051  016C  3EFF               	addlw	-1
  1052  016D  1D03               	skipz
  1053  016E  2967               	goto	u895
  1054  016F                     l1133:
  1055  016F  3001               	movlw	1
  1056  0170  02B0               	subwf	___aldiv@counter,f
  1057  0171  1D03               	btfss	3,2
  1058  0172  2974               	goto	u901
  1059  0173  2975               	goto	u900
  1060  0174                     u901:
  1061  0174  293C               	goto	l1123
  1062  0175                     u900:
  1063  0175                     l1135:
  1064  0175  0831               	movf	___aldiv@sign,w
  1065  0176  1903               	btfsc	3,2
  1066  0177  2979               	goto	u911
  1067  0178  297A               	goto	u910
  1068  0179                     u911:
  1069  0179  2985               	goto	l1139
  1070  017A                     u910:
  1071  017A                     l1137:
  1072  017A  09B2               	comf	___aldiv@quotient,f
  1073  017B  09B3               	comf	___aldiv@quotient+1,f
  1074  017C  09B4               	comf	___aldiv@quotient+2,f
  1075  017D  09B5               	comf	___aldiv@quotient+3,f
  1076  017E  0AB2               	incf	___aldiv@quotient,f
  1077  017F  1903               	skipnz
  1078  0180  0AB3               	incf	___aldiv@quotient+1,f
  1079  0181  1903               	skipnz
  1080  0182  0AB4               	incf	___aldiv@quotient+2,f
  1081  0183  1903               	skipnz
  1082  0184  0AB5               	incf	___aldiv@quotient+3,f
  1083  0185                     l1139:
  1084  0185  0835               	movf	___aldiv@quotient+3,w
  1085  0186  00AB               	movwf	?___aldiv+3
  1086  0187  0834               	movf	___aldiv@quotient+2,w
  1087  0188  00AA               	movwf	?___aldiv+2
  1088  0189  0833               	movf	___aldiv@quotient+1,w
  1089  018A  00A9               	movwf	?___aldiv+1
  1090  018B  0832               	movf	___aldiv@quotient,w
  1091  018C  00A8               	movwf	?___aldiv
  1092  018D                     l247:
  1093  018D  0008               	return
  1094  018E                     __end_of___aldiv:
  1095                           
  1096                           	psect	text4
  1097  0014                     __ptext4:	
  1098 ;; *************** function _printf *****************
  1099 ;; Defined at:
  1100 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  f               1    wreg     PTR const unsigned char 
  1103 ;;		 -> STR_1(16), 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  f               1   16[BANK0 ] PTR const unsigned char 
  1106 ;;		 -> STR_1(16), 
  1107 ;;  tmpval          4    0        struct .
  1108 ;;  val             2   18[BANK0 ] unsigned int 
  1109 ;;  cp              2    0        PTR const unsigned char 
  1110 ;;  len             2    0        unsigned int 
  1111 ;;  c               1   20[BANK0 ] unsigned char 
  1112 ;;  prec            1   17[BANK0 ] char 
  1113 ;;  flag            1   15[BANK0 ] unsigned char 
  1114 ;;  ap              1   14[BANK0 ] PTR void [1]
  1115 ;;		 -> ?_printf(2), 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  2    7[BANK0 ] int 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       4       0       0       0
  1126 ;;      Locals:         0       7       0       0       0
  1127 ;;      Temps:          0       3       0       0       0
  1128 ;;      Totals:         0      14       0       0       0
  1129 ;;Total ram usage:       14 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 2
  1132 ;; This function calls:
  1133 ;;		___lwdiv
  1134 ;;		___lwmod
  1135 ;;		_putch
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141  0014                     _printf:	
  1142                           ;psect for function _printf
  1143                           
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1147                           ;printf@f stored from wreg
  1148  0014  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0015  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0016  00B0               	movwf	printf@f
  1151  0017                     l1213:
  1152                           
  1153                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1154  0017  3027               	movlw	(low (?_printf| 0))& (0+255)
  1155  0018  00AB               	movwf	??_printf
  1156  0019  082B               	movf	??_printf,w
  1157  001A  00AE               	movwf	printf@ap
  1158                           
  1159                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1160  001B  28DC               	goto	l1259
  1161  001C                     l1215:
  1162                           
  1163                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1164  001C  3025               	movlw	37
  1165  001D  0634               	xorwf	printf@c,w
  1166  001E  1903               	btfsc	3,2
  1167  001F  2821               	goto	u1061
  1168  0020  2822               	goto	u1060
  1169  0021                     u1061:
  1170  0021  2829               	goto	l1219
  1171  0022                     u1060:
  1172  0022                     l1217:
  1173                           
  1174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1175  0022  0834               	movf	printf@c,w
  1176  0023  120A  118A  2321  120A  118A  	fcall	_putch
  1177                           
  1178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  1179  0028  28DC               	goto	l1259
  1180  0029                     l1219:
  1181                           
  1182                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1183  0029  01AF               	clrf	printf@flag
  1184  002A                     l1223:	
  1185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1186                           
  1187  002A  3001               	movlw	1
  1188  002B  07B0               	addwf	printf@f,f
  1189  002C  30FF               	movlw	-1
  1190  002D  0730               	addwf	printf@f,w
  1191  002E  0084               	movwf	4
  1192  002F  120A  118A  22C2  120A  118A  	fcall	stringdir
  1193  0034  00B4               	movwf	printf@c
  1194  0035  00AB               	movwf	??_printf
  1195  0036  01AC               	clrf	??_printf+1
  1196                           
  1197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1198                           ; Switch size 1, requested type "simple"
  1199                           ; Number of cases is 1, Range of values is 0 to 0
  1200                           ; switch strategies available:
  1201                           ; Name         Instructions Cycles
  1202                           ; simple_byte            4     3 (average)
  1203                           ; direct_byte           11     8 (fixed)
  1204                           ; jumptable            260     6 (fixed)
  1205                           ;	Chosen strategy is simple_byte
  1206  0037  082C               	movf	??_printf+1,w
  1207  0038  3A00               	xorlw	0	; case 0
  1208  0039  1903               	skipnz
  1209  003A  283C               	goto	l1291
  1210  003B  28DC               	goto	l1259
  1211  003C                     l1291:
  1212                           
  1213                           ; Switch size 1, requested type "simple"
  1214                           ; Number of cases is 3, Range of values is 0 to 105
  1215                           ; switch strategies available:
  1216                           ; Name         Instructions Cycles
  1217                           ; simple_byte           10     6 (average)
  1218                           ; jumptable            260     6 (fixed)
  1219                           ;	Chosen strategy is simple_byte
  1220  003C  082B               	movf	??_printf,w
  1221  003D  3A00               	xorlw	0	; case 0
  1222  003E  1903               	skipnz
  1223  003F  28F0               	goto	l168
  1224  0040  3A64               	xorlw	100	; case 100
  1225  0041  1903               	skipnz
  1226  0042  2847               	goto	l1225
  1227  0043  3A0D               	xorlw	13	; case 105
  1228  0044  1903               	skipnz
  1229  0045  2847               	goto	l1225
  1230  0046  28DC               	goto	l1259
  1231  0047                     l1225:
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1234  0047  082E               	movf	printf@ap,w
  1235  0048  0084               	movwf	4
  1236  0049  1383               	bcf	3,7	;select IRP bank0
  1237  004A  0800               	movf	0,w
  1238  004B  00B2               	movwf	printf@val
  1239  004C  0A84               	incf	4,f
  1240  004D  0800               	movf	0,w
  1241  004E  00B3               	movwf	printf@val+1
  1242  004F                     l1227:
  1243  004F  3002               	movlw	2
  1244  0050  00AB               	movwf	??_printf
  1245  0051  082B               	movf	??_printf,w
  1246  0052  07AE               	addwf	printf@ap,f
  1247  0053                     l1229:
  1248                           
  1249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1250  0053  1FB3               	btfss	printf@val+1,7
  1251  0054  2856               	goto	u1071
  1252  0055  2857               	goto	u1070
  1253  0056                     u1071:
  1254  0056  2860               	goto	l1235
  1255  0057                     u1070:
  1256  0057                     l1231:
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1259  0057  3003               	movlw	3
  1260  0058  00AB               	movwf	??_printf
  1261  0059  082B               	movf	??_printf,w
  1262  005A  04AF               	iorwf	printf@flag,f
  1263  005B                     l1233:
  1264                           
  1265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1266  005B  09B2               	comf	printf@val,f
  1267  005C  09B3               	comf	printf@val+1,f
  1268  005D  0AB2               	incf	printf@val,f
  1269  005E  1903               	skipnz
  1270  005F  0AB3               	incf	printf@val+1,f
  1271  0060                     l1235:
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1274  0060  01B4               	clrf	printf@c
  1275  0061  0AB4               	incf	printf@c,f
  1276  0062                     l1241:
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1279  0062  0834               	movf	printf@c,w
  1280  0063  00AB               	movwf	??_printf
  1281  0064  072B               	addwf	??_printf,w
  1282  0065  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1283  0066  0084               	movwf	4
  1284  0067  120A  118A  22C2  120A  118A  	fcall	stringdir
  1285  006C  00AC               	movwf	??_printf+1
  1286  006D  120A  118A  22C2  120A  118A  	fcall	stringdir
  1287  0072  00AD               	movwf	??_printf+2
  1288  0073  082D               	movf	??_printf+2,w
  1289  0074  0233               	subwf	printf@val+1,w
  1290  0075  1D03               	skipz
  1291  0076  2879               	goto	u1085
  1292  0077  082C               	movf	??_printf+1,w
  1293  0078  0232               	subwf	printf@val,w
  1294  0079                     u1085:
  1295  0079  1803               	skipnc
  1296  007A  287C               	goto	u1081
  1297  007B  287D               	goto	u1080
  1298  007C                     u1081:
  1299  007C  287E               	goto	l1245
  1300  007D                     u1080:
  1301  007D  2888               	goto	l1247
  1302  007E                     l1245:
  1303  007E  3001               	movlw	1
  1304  007F  00AB               	movwf	??_printf
  1305  0080  082B               	movf	??_printf,w
  1306  0081  07B4               	addwf	printf@c,f
  1307  0082  3005               	movlw	5
  1308  0083  0634               	xorwf	printf@c,w
  1309  0084  1D03               	btfss	3,2
  1310  0085  2887               	goto	u1091
  1311  0086  2888               	goto	u1090
  1312  0087                     u1091:
  1313  0087  2862               	goto	l1241
  1314  0088                     u1090:
  1315  0088                     l1247:
  1316                           
  1317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1318  0088  082F               	movf	printf@flag,w
  1319  0089  3903               	andlw	3
  1320  008A  1903               	btfsc	3,2
  1321  008B  288D               	goto	u1101
  1322  008C  288E               	goto	u1100
  1323  008D                     u1101:
  1324  008D  2894               	goto	l1251
  1325  008E                     u1100:
  1326  008E                     l1249:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  1329  008E  302D               	movlw	45
  1330  008F  120A  118A  2321  120A  118A  	fcall	_putch
  1331  0094                     l1251:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1334  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0096  0834               	movf	printf@c,w
  1337  0097  00AB               	movwf	??_printf
  1338  0098  082B               	movf	??_printf,w
  1339  0099  00B1               	movwf	printf@prec
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1342  009A  28D1               	goto	l1257
  1343  009B                     l1253:
  1344                           
  1345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1346  009B  300A               	movlw	10
  1347  009C  00A3               	movwf	___lwmod@divisor
  1348  009D  3000               	movlw	0
  1349  009E  00A4               	movwf	___lwmod@divisor+1
  1350  009F  0831               	movf	printf@prec,w
  1351  00A0  00AB               	movwf	??_printf
  1352  00A1  072B               	addwf	??_printf,w
  1353  00A2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1354  00A3  0084               	movwf	4
  1355  00A4  120A  118A  22C2  120A  118A  	fcall	stringdir
  1356  00A9  00F3               	movwf	___lwdiv@divisor
  1357  00AA  120A  118A  22C2  120A  118A  	fcall	stringdir
  1358  00AF  00F4               	movwf	___lwdiv@divisor+1
  1359  00B0  0833               	movf	printf@val+1,w
  1360  00B1  00F6               	movwf	___lwdiv@dividend+1
  1361  00B2  0832               	movf	printf@val,w
  1362  00B3  00F5               	movwf	___lwdiv@dividend
  1363  00B4  120A  118A  2240  120A  118A  	fcall	___lwdiv
  1364  00B9  0874               	movf	?___lwdiv+1,w
  1365  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1366  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1367  00BC  00A6               	movwf	___lwmod@dividend+1
  1368  00BD  0873               	movf	?___lwdiv,w
  1369  00BE  00A5               	movwf	___lwmod@dividend
  1370  00BF  120A  118A  2286  120A  118A  	fcall	___lwmod
  1371  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1372  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1373  00C6  0823               	movf	?___lwmod,w
  1374  00C7  3E30               	addlw	48
  1375  00C8  00AC               	movwf	??_printf+1
  1376  00C9  082C               	movf	??_printf+1,w
  1377  00CA  00B4               	movwf	printf@c
  1378  00CB                     l1255:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
  1381  00CB  0834               	movf	printf@c,w
  1382  00CC  120A  118A  2321  120A  118A  	fcall	_putch
  1383  00D1                     l1257:
  1384                           
  1385                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1386  00D1  30FF               	movlw	255
  1387  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1388  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1389  00D4  00AB               	movwf	??_printf
  1390  00D5  082B               	movf	??_printf,w
  1391  00D6  07B1               	addwf	printf@prec,f
  1392  00D7  0A31               	incf	printf@prec,w
  1393  00D8  1D03               	btfss	3,2
  1394  00D9  28DB               	goto	u1111
  1395  00DA  28DC               	goto	u1110
  1396  00DB                     u1111:
  1397  00DB  289B               	goto	l1253
  1398  00DC                     u1110:
  1399  00DC                     l1259:
  1400                           
  1401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1402  00DC  3001               	movlw	1
  1403  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1404  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1405  00DF  07B0               	addwf	printf@f,f
  1406  00E0  30FF               	movlw	-1
  1407  00E1  0730               	addwf	printf@f,w
  1408  00E2  0084               	movwf	4
  1409  00E3  120A  118A  22C2  120A  118A  	fcall	stringdir
  1410  00E8  00AB               	movwf	??_printf
  1411  00E9  082B               	movf	??_printf,w
  1412  00EA  00B4               	movwf	printf@c
  1413  00EB  0834               	movf	printf@c,w
  1414  00EC  1D03               	btfss	3,2
  1415  00ED  28EF               	goto	u1121
  1416  00EE  28F0               	goto	u1120
  1417  00EF                     u1121:
  1418  00EF  281C               	goto	l1215
  1419  00F0                     u1120:
  1420  00F0                     l168:
  1421  00F0  0008               	return
  1422  00F1                     __end_of_printf:
  1423                           
  1424                           	psect	text5
  1425  0321                     __ptext5:	
  1426 ;; *************** function _putch *****************
  1427 ;; Defined at:
  1428 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\putch.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  c               1    wreg     unsigned char 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  c               1    0[COMMON] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0
  1445 ;;      Totals:         0       0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 1
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_printf
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456  0321                     _putch:	
  1457                           ;psect for function _putch
  1458                           
  1459  0321                     l623:	
  1460                           ;incstack = 0
  1461                           ; Regs used in _putch: [wreg]
  1462                           
  1463  0321  0008               	return
  1464  0322                     __end_of_putch:
  1465                           
  1466                           	psect	text6
  1467  0286                     __ptext6:	
  1468 ;; *************** function ___lwmod *****************
  1469 ;; Defined at:
  1470 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  divisor         2    3[BANK0 ] unsigned int 
  1473 ;;  dividend        2    5[BANK0 ] unsigned int 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  counter         1    9[COMMON] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  2    3[BANK0 ] unsigned int 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         0       4       0       0       0
  1486 ;;      Locals:         1       0       0       0       0
  1487 ;;      Temps:          1       0       0       0       0
  1488 ;;      Totals:         2       4       0       0       0
  1489 ;;Total ram usage:        6 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_printf
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499  0286                     ___lwmod:	
  1500                           ;psect for function ___lwmod
  1501                           
  1502  0286                     l1169:	
  1503                           ;incstack = 0
  1504                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1505                           
  1506  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1507  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1508  0288  0823               	movf	___lwmod@divisor,w
  1509  0289  0424               	iorwf	___lwmod@divisor+1,w
  1510  028A  1903               	btfsc	3,2
  1511  028B  2A8D               	goto	u991
  1512  028C  2A8E               	goto	u990
  1513  028D                     u991:
  1514  028D  2ABD               	goto	l1187
  1515  028E                     u990:
  1516  028E                     l1171:
  1517  028E  01F9               	clrf	___lwmod@counter
  1518  028F  0AF9               	incf	___lwmod@counter,f
  1519  0290  2A9C               	goto	l1177
  1520  0291                     l1173:
  1521  0291  3001               	movlw	1
  1522  0292                     u1005:
  1523  0292  1003               	clrc
  1524  0293  0DA3               	rlf	___lwmod@divisor,f
  1525  0294  0DA4               	rlf	___lwmod@divisor+1,f
  1526  0295  3EFF               	addlw	-1
  1527  0296  1D03               	skipz
  1528  0297  2A92               	goto	u1005
  1529  0298                     l1175:
  1530  0298  3001               	movlw	1
  1531  0299  00F8               	movwf	??___lwmod
  1532  029A  0878               	movf	??___lwmod,w
  1533  029B  07F9               	addwf	___lwmod@counter,f
  1534  029C                     l1177:
  1535  029C  1FA4               	btfss	___lwmod@divisor+1,7
  1536  029D  2A9F               	goto	u1011
  1537  029E  2AA0               	goto	u1010
  1538  029F                     u1011:
  1539  029F  2A91               	goto	l1173
  1540  02A0                     u1010:
  1541  02A0                     l1179:
  1542  02A0  0824               	movf	___lwmod@divisor+1,w
  1543  02A1  0226               	subwf	___lwmod@dividend+1,w
  1544  02A2  1D03               	skipz
  1545  02A3  2AA6               	goto	u1025
  1546  02A4  0823               	movf	___lwmod@divisor,w
  1547  02A5  0225               	subwf	___lwmod@dividend,w
  1548  02A6                     u1025:
  1549  02A6  1C03               	skipc
  1550  02A7  2AA9               	goto	u1021
  1551  02A8  2AAA               	goto	u1020
  1552  02A9                     u1021:
  1553  02A9  2AB0               	goto	l1183
  1554  02AA                     u1020:
  1555  02AA                     l1181:
  1556  02AA  0823               	movf	___lwmod@divisor,w
  1557  02AB  02A5               	subwf	___lwmod@dividend,f
  1558  02AC  0824               	movf	___lwmod@divisor+1,w
  1559  02AD  1C03               	skipc
  1560  02AE  03A6               	decf	___lwmod@dividend+1,f
  1561  02AF  02A6               	subwf	___lwmod@dividend+1,f
  1562  02B0                     l1183:
  1563  02B0  3001               	movlw	1
  1564  02B1                     u1035:
  1565  02B1  1003               	clrc
  1566  02B2  0CA4               	rrf	___lwmod@divisor+1,f
  1567  02B3  0CA3               	rrf	___lwmod@divisor,f
  1568  02B4  3EFF               	addlw	-1
  1569  02B5  1D03               	skipz
  1570  02B6  2AB1               	goto	u1035
  1571  02B7                     l1185:
  1572  02B7  3001               	movlw	1
  1573  02B8  02F9               	subwf	___lwmod@counter,f
  1574  02B9  1D03               	btfss	3,2
  1575  02BA  2ABC               	goto	u1041
  1576  02BB  2ABD               	goto	u1040
  1577  02BC                     u1041:
  1578  02BC  2AA0               	goto	l1179
  1579  02BD                     u1040:
  1580  02BD                     l1187:
  1581  02BD  0826               	movf	___lwmod@dividend+1,w
  1582  02BE  00A4               	movwf	?___lwmod+1
  1583  02BF  0825               	movf	___lwmod@dividend,w
  1584  02C0  00A3               	movwf	?___lwmod
  1585  02C1                     l454:
  1586  02C1  0008               	return
  1587  02C2                     __end_of___lwmod:
  1588                           
  1589                           	psect	text7
  1590  0240                     __ptext7:	
  1591 ;; *************** function ___lwdiv *****************
  1592 ;; Defined at:
  1593 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  divisor         2    3[COMMON] unsigned int 
  1596 ;;  dividend        2    5[COMMON] unsigned int 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  quotient        2    1[BANK0 ] unsigned int 
  1599 ;;  counter         1    0[BANK0 ] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  2    3[COMMON] unsigned int 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1609 ;;      Params:         4       0       0       0       0
  1610 ;;      Locals:         0       3       0       0       0
  1611 ;;      Temps:          1       0       0       0       0
  1612 ;;      Totals:         5       3       0       0       0
  1613 ;;Total ram usage:        8 bytes
  1614 ;; Hardware stack levels used: 1
  1615 ;; Hardware stack levels required when called: 1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_printf
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623  0240                     ___lwdiv:	
  1624                           ;psect for function ___lwdiv
  1625                           
  1626  0240                     l1143:	
  1627                           ;incstack = 0
  1628                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1629                           
  1630  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0242  01A1               	clrf	___lwdiv@quotient
  1633  0243  01A2               	clrf	___lwdiv@quotient+1
  1634  0244                     l1145:
  1635  0244  0873               	movf	___lwdiv@divisor,w
  1636  0245  0474               	iorwf	___lwdiv@divisor+1,w
  1637  0246  1903               	btfsc	3,2
  1638  0247  2A49               	goto	u921
  1639  0248  2A4A               	goto	u920
  1640  0249                     u921:
  1641  0249  2A81               	goto	l1165
  1642  024A                     u920:
  1643  024A                     l1147:
  1644  024A  01A0               	clrf	___lwdiv@counter
  1645  024B  0AA0               	incf	___lwdiv@counter,f
  1646  024C  2A58               	goto	l1153
  1647  024D                     l1149:
  1648  024D  3001               	movlw	1
  1649  024E                     u935:
  1650  024E  1003               	clrc
  1651  024F  0DF3               	rlf	___lwdiv@divisor,f
  1652  0250  0DF4               	rlf	___lwdiv@divisor+1,f
  1653  0251  3EFF               	addlw	-1
  1654  0252  1D03               	skipz
  1655  0253  2A4E               	goto	u935
  1656  0254                     l1151:
  1657  0254  3001               	movlw	1
  1658  0255  00F7               	movwf	??___lwdiv
  1659  0256  0877               	movf	??___lwdiv,w
  1660  0257  07A0               	addwf	___lwdiv@counter,f
  1661  0258                     l1153:
  1662  0258  1FF4               	btfss	___lwdiv@divisor+1,7
  1663  0259  2A5B               	goto	u941
  1664  025A  2A5C               	goto	u940
  1665  025B                     u941:
  1666  025B  2A4D               	goto	l1149
  1667  025C                     u940:
  1668  025C                     l1155:
  1669  025C  3001               	movlw	1
  1670  025D                     u955:
  1671  025D  1003               	clrc
  1672  025E  0DA1               	rlf	___lwdiv@quotient,f
  1673  025F  0DA2               	rlf	___lwdiv@quotient+1,f
  1674  0260  3EFF               	addlw	-1
  1675  0261  1D03               	skipz
  1676  0262  2A5D               	goto	u955
  1677  0263  0874               	movf	___lwdiv@divisor+1,w
  1678  0264  0276               	subwf	___lwdiv@dividend+1,w
  1679  0265  1D03               	skipz
  1680  0266  2A69               	goto	u965
  1681  0267  0873               	movf	___lwdiv@divisor,w
  1682  0268  0275               	subwf	___lwdiv@dividend,w
  1683  0269                     u965:
  1684  0269  1C03               	skipc
  1685  026A  2A6C               	goto	u961
  1686  026B  2A6D               	goto	u960
  1687  026C                     u961:
  1688  026C  2A74               	goto	l1161
  1689  026D                     u960:
  1690  026D                     l1157:
  1691  026D  0873               	movf	___lwdiv@divisor,w
  1692  026E  02F5               	subwf	___lwdiv@dividend,f
  1693  026F  0874               	movf	___lwdiv@divisor+1,w
  1694  0270  1C03               	skipc
  1695  0271  03F6               	decf	___lwdiv@dividend+1,f
  1696  0272  02F6               	subwf	___lwdiv@dividend+1,f
  1697  0273                     l1159:
  1698  0273  1421               	bsf	___lwdiv@quotient,0
  1699  0274                     l1161:
  1700  0274  3001               	movlw	1
  1701  0275                     u975:
  1702  0275  1003               	clrc
  1703  0276  0CF4               	rrf	___lwdiv@divisor+1,f
  1704  0277  0CF3               	rrf	___lwdiv@divisor,f
  1705  0278  3EFF               	addlw	-1
  1706  0279  1D03               	skipz
  1707  027A  2A75               	goto	u975
  1708  027B                     l1163:
  1709  027B  3001               	movlw	1
  1710  027C  02A0               	subwf	___lwdiv@counter,f
  1711  027D  1D03               	btfss	3,2
  1712  027E  2A80               	goto	u981
  1713  027F  2A81               	goto	u980
  1714  0280                     u981:
  1715  0280  2A5C               	goto	l1155
  1716  0281                     u980:
  1717  0281                     l1165:
  1718  0281  0822               	movf	___lwdiv@quotient+1,w
  1719  0282  00F4               	movwf	?___lwdiv+1
  1720  0283  0821               	movf	___lwdiv@quotient,w
  1721  0284  00F3               	movwf	?___lwdiv
  1722  0285                     l444:
  1723  0285  0008               	return
  1724  0286                     __end_of___lwdiv:
  1725                           
  1726                           	psect	text8
  1727  0302                     __ptext8:	
  1728 ;; *************** function _ISR *****************
  1729 ;; Defined at:
  1730 ;;		line 28 in file "main.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0
  1746 ;;      Temps:          3       0       0       0       0
  1747 ;;      Totals:         3       0       0       0       0
  1748 ;;Total ram usage:        3 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		Interrupt level 1
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757  0302                     _ISR:	
  1758                           ;psect for function _ISR
  1759                           
  1760  0302                     i1l1057:
  1761                           
  1762                           ;main.c: 30:     if (TMR1IF)
  1763  0302  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0303  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0304  1C0C               	btfss	12,0	;volatile
  1766  0305  2B07               	goto	u75_21
  1767  0306  2B08               	goto	u75_20
  1768  0307                     u75_21:
  1769  0307  2B1A               	goto	i1l31
  1770  0308                     u75_20:
  1771  0308                     i1l1059:
  1772                           
  1773                           ;main.c: 31:    {;main.c: 32:       C++;
  1774  0308  3001               	movlw	1
  1775  0309  00F0               	movwf	??_ISR
  1776  030A  0870               	movf	??_ISR,w
  1777  030B  07FA               	addwf	_C,f
  1778                           
  1779                           ;main.c: 33:       if(C==20)
  1780  030C  3014               	movlw	20
  1781  030D  067A               	xorwf	_C,w
  1782  030E  1D03               	btfss	3,2
  1783  030F  2B11               	goto	u76_21
  1784  0310  2B12               	goto	u76_20
  1785  0311                     u76_21:
  1786  0311  2B15               	goto	i1l1065
  1787  0312                     u76_20:
  1788  0312                     i1l1061:
  1789                           
  1790                           ;main.c: 34:       {;main.c: 36:         RB0 = ~RB0;
  1791  0312  3001               	movlw	1
  1792  0313  0686               	xorwf	6,f
  1793  0314                     i1l1063:
  1794                           
  1795                           ;main.c: 38:         C = 0;
  1796  0314  01FA               	clrf	_C
  1797  0315                     i1l1065:
  1798                           
  1799                           ;main.c: 41:       TMR1 = (unsigned short)preloadValue;
  1800  0315  083F               	movf	_preloadValue+1,w
  1801  0316  008F               	movwf	15	;volatile
  1802  0317  083E               	movf	_preloadValue,w
  1803  0318  008E               	movwf	14	;volatile
  1804  0319                     i1l1067:
  1805                           
  1806                           ;main.c: 43:       TMR1IF = 0;
  1807  0319  100C               	bcf	12,0	;volatile
  1808  031A                     i1l31:
  1809  031A  0872               	movf	??_ISR+2,w
  1810  031B  008A               	movwf	10
  1811  031C  0E71               	swapf	??_ISR+1,w
  1812  031D  0083               	movwf	3
  1813  031E  0EFE               	swapf	btemp,f
  1814  031F  0E7E               	swapf	btemp,w
  1815  0320  0009               	retfie
  1816  0321                     __end_of_ISR:
  1817  007E                     btemp	set	126	;btemp
  1818  007E                     wtemp0	set	126
  1819                           
  1820                           	psect	intentry
  1821  0004                     __pintentry:	
  1822                           ;incstack = 0
  1823                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1824                           
  1825  0004                     interrupt_function:
  1826  007E                     saved_w	set	btemp
  1827  0004  00FE               	movwf	btemp
  1828  0005  0E03               	swapf	3,w
  1829  0006  00F1               	movwf	??_ISR+1
  1830  0007  080A               	movf	10,w
  1831  0008  00F2               	movwf	??_ISR+2
  1832  0009  120A  118A  2B02   	ljmp	_ISR
  1833                           
  1834                           	psect	idloc
  1835                           
  1836                           ;Config register IDLOC0 @ 0x2000
  1837                           ;	unspecified, using default values
  1838  2000                     	org	8192
  1839  2000  3FFF               	dw	16383
  1840                           
  1841                           ;Config register IDLOC1 @ 0x2001
  1842                           ;	unspecified, using default values
  1843  2001                     	org	8193
  1844  2001  3FFF               	dw	16383
  1845                           
  1846                           ;Config register IDLOC2 @ 0x2002
  1847                           ;	unspecified, using default values
  1848  2002                     	org	8194
  1849  2002  3FFF               	dw	16383
  1850                           
  1851                           ;Config register IDLOC3 @ 0x2003
  1852                           ;	unspecified, using default values
  1853  2003                     	org	8195
  1854  2003  3FFF               	dw	16383
  1855                           
  1856                           	psect	config
  1857                           
  1858                           ;Config register CONFIG @ 0x2007
  1859                           ;	Oscillator Selection bits
  1860                           ;	FOSC = HS, HS oscillator
  1861                           ;	Watchdog Timer Enable bit
  1862                           ;	WDTE = OFF, WDT disabled
  1863                           ;	Power-up Timer Enable bit
  1864                           ;	PWRTE = ON, PWRT enabled
  1865                           ;	Brown-out Reset Enable bit
  1866                           ;	BOREN = ON, BOR enabled
  1867                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1868                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1869                           ;	Data EEPROM Memory Code Protection bit
  1870                           ;	CPD = OFF, Data EEPROM code protection off
  1871                           ;	Flash Program Memory Write Enable bits
  1872                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1873                           ;	In-Circuit Debugger Mode bit
  1874                           ;	DEBUG = 0x1, unprogrammed default
  1875                           ;	Flash Program Memory Code Protection bit
  1876                           ;	CP = OFF, Code protection off
  1877  2007                     	org	8199
  1878  2007  3FF2               	dw	16370

Data Sizes:
    Strings     16
    Constant    10
    Data        0
    BSS         1
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     30      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_sEos_Init_Timer1
    _sEos_Init_Timer1->___aldiv
    ___aldiv->___lmul
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sEos_Init_Timer1
    _sEos_Init_Timer1->___aldiv
    ___aldiv->___lmul
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2404
                             _printf
                   _sEos_Init_Timer1
 ---------------------------------------------------------------------------------
 (1) _sEos_Init_Timer1                                     9     9      0     972
                                              9 COMMON     1     1      0
                                             22 BANK0      8     8      0
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              3 COMMON     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              8 COMMON     1     1      0
                                              8 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1432
                                              7 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _sEos_Init_Timer1
     ___aldiv
       ___lmul (ARG)
     ___lmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2D      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Nov 28 14:21:24 2022

                       _C 007A                         pc 0002                        l56 01F7  
                      fsr 0004                       l237 0105                       l247 018D  
                     l168 00F0                       l186 023F                       l444 0285  
                     l454 02C1                       l623 0321                       _GIE 005F  
                     _RB0 0030                       _ISR 0302                       u810 0237  
                     u811 0236                       u900 0175                       u820 00F8  
                     u901 0174                       u821 00F7                       u805 0227  
                     u910 017A                       u830 0109                       u911 0179  
                     u831 0108                       u920 024A                       u840 0128  
                     u921 0249                       u841 0127                       u770 0206  
                     u771 0205                       u940 025C                       u860 013C  
                     u941 025B                       u861 013B                       u781 020F  
                     u782 0216                       u935 024E                       u855 012D  
                     u783 021D                       u960 026D                       u880 0157  
                     u961 026C                       u881 0156                       u955 025D  
                     u875 013E                       u795 021F                       u980 0281  
                     u981 0280                       u965 0269                       u885 0153  
                     u990 028E                       u975 0275                       u991 028D  
                     u895 0167                       fsr0 0004                       indf 0000  
                    ?_ISR 0070                      l1111 0114                      l1103 00F1  
                    l1121 0138                      l1113 0118                      l1105 00F4  
                    l1201 01ED                      l1131 0166                      l1123 013C  
                    l1115 0120                      l1107 00F8                      l1211 01F6  
                    l1203 01EE                      l1213 0017                      l1133 016F  
                    l1125 0145                      l1117 0128                      l1109 0109  
                    l1205 01EF                      l1151 0254                      l1143 0240  
                    l1231 0057                      l1223 002A                      l1215 001C  
                    l1127 0157                      l1119 012B                      l1135 0175  
                    l1207 01F2                      l1161 0274                      l1153 0258  
                    l1145 0244                      l1241 0062                      l1233 005B  
                    l1225 0047                      l1217 0022                      l1137 017A  
                    l1129 0165                      l1209 01F5                      l1163 027B  
                    l1155 025C                      l1147 024A                      l1171 028E  
                    l1251 0094                      l1235 0060                      l1227 004F  
                    l1219 0029                      l1139 0185                      l1091 0200  
                    l1157 026D                      l1149 024D                      l1165 0281  
                    l1181 02AA                      l1173 0291                      l1253 009B  
                    l1245 007E                      l1229 0053                      l1093 0206  
                    l1159 0273                      l1183 02B0                      l1175 0298  
                    l1255 00CB                      l1247 0088                      l1095 021D  
                    l1191 018F                      l1185 02B7                      l1177 029C  
                    l1169 0286                      l1257 00D1                      l1249 008E  
                    l1097 0226                      l1089 01F8                      l1193 01E6  
                    l1265 02E2                      l1179 02A0                      l1187 02BD  
                    l1291 003C                      l1259 00DC                      l1099 0237  
                    l1195 01EA                      l1267 02E8                      l1197 01EB  
                    l1269 02EE                      l1199 01EC                      STR_1 02D2  
                    u1010 02A0                      u1011 029F                      u1020 02AA  
                    u1100 008E                      u1021 02A9                      u1005 0292  
                    u1101 008D                      u1110 00DC                      u1111 00DB  
                    u1040 02BD                      u1120 00F0                      u1041 02BC  
                    u1025 02A6                      u1121 00EF                      u1050 01C4  
                    u1035 02B1                      u1051 01C5                      u1060 0022  
                    u1052 01CA                      u1061 0021                      u1053 01CB  
                    u1070 0057                      u1071 0056                      u1080 007D  
                    u1081 007C                      u1090 0088                      u1091 0087  
                    u1085 0079                      _PEIE 005E                      i1l31 031A  
                    _TMR1 000E                      _main 02E2                      btemp 007E  
                    start 000C                     ??_ISR 0070           __end_of___aldiv 018E  
                   ?_main 0070           __end_of___lwdiv 0286           __end_of___lwmod 02C2  
                   u75_20 0308                     u75_21 0307                     u76_20 0312  
                   u76_21 0311       ___lmul@multiplicand 0024           __end_of_dpowers 02D2  
                   _putch 0321                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 000F              __end_of_main 0302  
                  ??_main 007A                    ?_putch 0070                    i1l1061 0312  
                  i1l1063 0314                    i1l1065 0315                    i1l1057 0302  
                  i1l1067 0319                    i1l1059 0308                    _TMR1IE 0460  
                  _TMR1IF 0060                    _TMR1CS 0081                    _TMR1ON 0080  
                  _TRISB0 0430                    ___lmul 01F8                 ??___aldiv 0078  
               ??___lwdiv 0077                 ??___lwmod 0078                    _printf 0014  
__end_of_sEos_Init_Timer1 01F8                    saved_w 007E                    putch@c 0070  
 __end_of__initialization 0010            __pcstackCOMMON 0070             __end_of_putch 0322  
                 ??_putch 0073                __pmaintext 02E2                   ?___lmul 0020  
              __pintentry 0004            ___lmul@product 0074                   ?_printf 0027  
                 _T1CKPS0 0084                   _T1CKPS1 0085                __stringtab 02C2  
                 ___aldiv 00F1                   ___lwdiv 0240                   ___lwmod 0286  
                 __ptext1 018E                   __ptext2 01F8                   __ptext3 00F1  
                 __ptext4 0014                   __ptext5 0321                   __ptext6 0286  
                 __ptext7 0240                   __ptext8 0302                   _dpowers 02C8  
        ___aldiv@dividend 002C      end_of_initialization 0010                   printf@c 0034  
                 printf@f 0030          ___aldiv@quotient 0032   sEos_Init_Timer1@TICK_MS 0079  
       ?_sEos_Init_Timer1 0070        ??_sEos_Init_Timer1 0036            __end_of___lmul 0240  
          __end_of_printf 00F1       start_initialization 000F               __end_of_ISR 0321  
                ??___lmul 0073                  ??_printf 002B               __pbssCOMMON 007A  
               ___latbits 0002             __pcstackBANK0 0020                 __pnvBANK0 003E  
        ___lwdiv@dividend 0075                  ?___aldiv 0028                  ?___lwdiv 0073  
                ?___lwmod 0023                 __pstrings 02C2          ___lwdiv@quotient 0021  
         ___aldiv@divisor 0028         interrupt_function 0004           ___aldiv@counter 0030  
             __stringbase 02C7                printf@flag 002F                printf@prec 0031  
       ___lmul@multiplier 0020        __end_of__stringtab 02C8           ___lwdiv@divisor 0073  
         ___lwdiv@counter 0020                 printf@val 0032              _preloadValue 003E  
                intlevel1 0000          ___lwmod@dividend 0025                 stringcode 02C2  
                printf@ap 002E           ___lwmod@divisor 0023           ___lwmod@counter 0079  
                stringdir 02C2                  stringtab 02C2              ___aldiv@sign 0031  
        _sEos_Init_Timer1 018E  
